CREATE PROCEDURE PRACTICE.DELETED_SESSIONS_RESOURCES
@ZHURNAL_ID INT
AS
IF OBJECT_ID('TEMPDB..#REZULT3') IS NOT NULL
	DROP TABLE #REZULT3

SELECT TAB.LOGIN_ID,TAB.CPU,TAB.LOGICAL_READS,TAB.RAM_USAGE,B.CPU_FOR_ALL_SESSIONS,B.LOGICAL_READS_FOR_ALL_SESSIONS,B.RAM_FOR_ALL_SESSIONS,
CASE
	WHEN TAB.CPU > B.CPU_FOR_ALL_SESSIONS THEN 'CPU'
    WHEN TAB.LOGICAL_READS > B.LOGICAL_READS_FOR_ALL_SESSIONS THEN 'LOGICAL_READS'
    WHEN TAB.RAM_USAGE > B.RAM_FOR_ALL_SESSIONS THEN 'RAM'
END CAUSE
INTO #REZULT3
FROM
(
	SELECT A.LOGIN_ID, SUM(A.CPU_USAGE) AS CPU,SUM(A.LOGICAL_READS) AS LOGICAL_READS,SUM(A.RAM_USAGE) AS RAM_USAGE 
	FROM PRACTICE.INFORMATION A
	WHERE A.ZHURNAL_ID = @ZHURNAL_ID AND A.LOGIN_ID NOT IN (SELECT D.LOGIN_ID FROM PRACTICE.INFORMATION C
	LEFT JOIN PRACTICE.EXCEPTION D ON D.LOGIN_ID = C.LOGIN_ID AND CASE 
																		WHEN D.EXCEPTION_TYPE = 'EXCLUSIVE' THEN 1 
																		WHEN D.EXCEPTION_TYPE = 'DATE' AND GETDATE() BETWEEN D.DATE_FROM AND D.DATE_TO THEN 1
																		WHEN D.EXCEPTION_TYPE = 'TIME' AND CONVERT (TIME, CURRENT_TIMESTAMP) BETWEEN D.TIME_FROM AND D.TIME_TO THEN 1
																  END = 1
	WHERE A.ZHURNAL_ID = D.ZHURNAL_ID)
	GROUP BY A.LOGIN_ID
) TAB
INNER JOIN PRACTICE.SETINGS B ON TAB.CPU > B.CPU_FOR_ALL_SESSIONS OR TAB.LOGICAL_READS > B.LOGICAL_READS_FOR_ALL_SESSIONS OR TAB.RAM_USAGE > B.RAM_FOR_ALL_SESSIONS

IF OBJECT_ID('TEMPDB..#PETR') IS NOT NULL
	DROP TABLE #PETR;

WITH T1 AS
(
	SELECT A.*,DENSE_RANK() OVER   
	(PARTITION BY A.LOGIN_ID ORDER BY A.CPU_USAGE DESC) AS RANK1 
	FROM PRACTICE.INFORMATION A
	JOIN #REZULT3 B ON A.LOGIN_ID = B.LOGIN_ID 
	WHERE B.CAUSE = 'CPU'
)
SELECT * 
INTO #PETR
FROM T1 WHERE RANK1 = 1

INSERT INTO PRACTICE.DELETED_SESSIONS(BLOCK_SESSION, BLOCK_LOGIN_ID,ZHURNAL_ID,ACTION1)
SELECT A.SESSION_ID, A.LOGIN_ID, A.ZHURNAL_ID,'анкэьне ясллюпмне онрпеакемхе CPU' FROM #PETR A

IF OBJECT_ID('TEMPDB..#PETR1') IS NOT NULL
	DROP TABLE #PETR1;
	
WITH T2 AS
(
	SELECT A.*,DENSE_RANK() OVER   
	(PARTITION BY A.LOGIN_ID ORDER BY A.RAM_USAGE DESC) AS RANK2
	FROM PRACTICE.INFORMATION A
	JOIN #REZULT3 B ON A.LOGIN_ID = B.LOGIN_ID 
	WHERE B.CAUSE = 'RAM'
)
SELECT *
INTO #PETR1
FROM T2 WHERE RANK2 = 1

INSERT INTO PRACTICE.DELETED_SESSIONS(BLOCK_SESSION, BLOCK_LOGIN_ID,ZHURNAL_ID,ACTION1)
SELECT A.SESSION_ID, A.LOGIN_ID, A.ZHURNAL_ID,'анкэьне ясллюпмне онрпеакемхе RAM' FROM #PETR1 A

IF OBJECT_ID('TEMPDB..#PETR2') IS NOT NULL
	DROP TABLE #PETR2;

WITH T3 AS
(
	SELECT A.*,DENSE_RANK() OVER   
	(PARTITION BY A.LOGIN_ID ORDER BY A.LOGICAL_READS DESC) AS RANK3 
	FROM PRACTICE.INFORMATION A
	JOIN #REZULT3 B ON A.LOGIN_ID = B.LOGIN_ID 
	WHERE B.CAUSE = 'LOGICAL_READS'
)
SELECT * 
INTO #PETR2
FROM T3 WHERE RANK3 = 1
		
INSERT INTO PRACTICE.DELETED_SESSIONS(BLOCK_SESSION, BLOCK_LOGIN_ID,ZHURNAL_ID,ACTION1)
SELECT A.SESSION_ID, A.LOGIN_ID, A.ZHURNAL_ID,'анкэьне ясллюпмне онрпеакемхе LOGICAL_READS' FROM #PETR2 A


