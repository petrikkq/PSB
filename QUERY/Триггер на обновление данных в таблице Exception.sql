CREATE TRIGGER PRACTICE.UPDATE_EXCEPTION
ON PRACTICE.EXCEPTION
INSTEAD OF UPDATE
AS
BEGIN
	IF NOT EXISTS 
		(
		SELECT * FROM INSERTED
		WHERE 1=1
		AND ((EXCEPTION_TYPE = 'TIME' AND (TIME_FROM IS NULL OR TIME_TO IS NULL OR DATE_TO IS NOT NULL OR DATE_FROM IS NOT NULL))
		OR (EXCEPTION_TYPE = 'DATE' AND (TIME_FROM IS NOT NULL OR TIME_TO IS NOT NULL OR DATE_TO IS NULL OR DATE_FROM IS NULL))
		OR (EXCEPTION_TYPE = 'EXCLUSIVE' AND (TIME_FROM IS NOT NULL OR TIME_TO IS NOT NULL OR DATE_TO IS NOT NULL OR DATE_FROM IS NOT NULL)))
		)
	BEGIN
		UPDATE A
		SET 
		LOGIN_ID			= B.LOGIN_ID
		, TIME_FROM			= B.TIME_FROM
		, TIME_TO			= B.TIME_TO
		, DATE_FROM			= B.DATE_FROM
		, DATE_TO			= B.DATE_TO
		, EXCEPTION_TYPE 	= B.EXCEPTION_TYPE 
		FROM PRACTICE.EXCEPTION A 
		JOIN INSERTED B ON A.ID = B.ID 
	
		INSERT INTO PRACTICE.EXCEPTION_LOG (EXCEPTION_ID, LOGIN_ID,TIME_FROM,TIME_TO,DATE_FROM,DATE_TO,EXCEPTION_TYPE,DATE_CHANGE,ACTION1)
		SELECT ID,LOGIN_ID,TIME_FROM,TIME_TO,DATE_FROM,DATE_TO,EXCEPTION_TYPE, GETDATE(),'днаюбкемхе'  FROM INSERTED

		INSERT INTO PRACTICE.EXCEPTION_LOG (EXCEPTION_ID, LOGIN_ID,TIME_FROM,TIME_TO,DATE_FROM,DATE_TO,EXCEPTION_TYPE,DATE_CHANGE,ACTION1)
		SELECT ID,LOGIN_ID,TIME_FROM,TIME_TO,DATE_FROM,DATE_TO,EXCEPTION_TYPE, GETDATE(),'сдюкемхе'  FROM DELETED
	END
	ELSE 
	RAISERROR ('ньхайю! мебепмши ббнд дюммшу (UPDATE)', 16,1)
END;
