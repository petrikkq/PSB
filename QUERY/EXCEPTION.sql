--янгдюмхе рюакхжш EXCEPTION
--ID - смхйюкэмши хдемрхтхйюрнп;
--LOGIN_ID - бмеьмхи йкчв хг рюакхжш DIC_LOGINS;
--TIME_FROM - бпелъ мювюкю нцпюмхвемхъ;
--TIME_TO - бпелъ нйнмвюмхъ нцпюмхвемхъ;
--DATE_FROM - дюрю мювюкю нцпюмхвемхъ;
--DATE_TO - дюрю нйнмвюмхъ нцпюмхвемхъ;
--EXCEPTION_TYPE - рхо нцпюмхвемхъ;
--ZHURNAL_ID - бмеьмхи йкчв хг рюакхжш ZHURNAL;
--PRIORITY1 - опхнпхрер.
CREATE TABLE PRACTICE.EXCEPTION
(
	ID INT IDENTITY(1,1),
	LOGIN_ID INT NOT NULL,
	TIME_FROM TIME,
	TIME_TO TIME,
	DATE_FROM DATE,
	DATE_TO DATE,
	EXCEPTION_TYPE VARCHAR(10) NOT NULL,
	ZHURNAL_ID INT,
	PRIORITY1 INT
);

--рпхццеп мю днаюбкемхе дюммшу б рюакхжс PRACTICE.EXCEPTION 
CREATE TRIGGER PRACTICE.INSERT_EXCEPTION
ON PRACTICE.EXCEPTION
INSTEAD OF INSERT
AS
BEGIN
--опнбепйю мю опюбхкэмнярэ ббндю нцпюмхвемхъ
	IF NOT EXISTS
		(
		SELECT * FROM INSERTED
		WHERE 1=1
		AND ((EXCEPTION_TYPE = 'TIME' AND (TIME_FROM IS NULL OR TIME_TO IS NULL OR DATE_TO IS NOT NULL OR DATE_FROM IS NOT NULL))
		OR (EXCEPTION_TYPE = 'DATE' AND (TIME_FROM IS NOT NULL OR TIME_TO IS NOT NULL OR DATE_TO IS NULL OR DATE_FROM IS NULL))
		OR (EXCEPTION_TYPE = 'EXCLUSIVE' AND (TIME_FROM IS NOT NULL OR TIME_TO IS NOT NULL OR DATE_TO IS NOT NULL OR DATE_FROM IS NOT NULL)))
		)
	BEGIN
--днаюбкемхе дюммшу б рюакхжс EXCEPTION
		INSERT INTO PRACTICE.EXCEPTION (LOGIN_ID,TIME_FROM,TIME_TO,DATE_FROM,DATE_TO,EXCEPTION_TYPE,ZHURNAL_ID,PRIORITY1)
		OUTPUT INSERTED.ID,INSERTED.LOGIN_ID,INSERTED.TIME_FROM,INSERTED.TIME_TO,INSERTED.DATE_FROM,INSERTED.DATE_TO,INSERTED.EXCEPTION_TYPE,GETDATE(),'днаюбкемхе' 
--днаюбкемхе дюммшу б рюакхжс EXCEPTION_LOG
		INTO PRACTICE.EXCEPTION_LOG (EXCEPTION_ID, LOGIN_ID,TIME_FROM,TIME_TO,DATE_FROM,DATE_TO,EXCEPTION_TYPE,DATE_CHANGE,ACTION1)
		SELECT LOGIN_ID,TIME_FROM,TIME_TO,DATE_FROM,DATE_TO,EXCEPTION_TYPE,ZHURNAL_ID,PRIORITY1  FROM INSERTED
	END
	ELSE 
		RAISERROR ('ньхайю! мебепмши ббнд дюммшу', 16,1)
END;
GO

--рпхццеп мю намнбкемхе дюммшу б рюакхже EXCEPTION
CREATE TRIGGER PRACTICE.UPDATE_EXCEPTION
ON PRACTICE.EXCEPTION
INSTEAD OF UPDATE
AS
BEGIN
--опнбепйю мю опюбхкэмнярэ ббндю нцпюмхвемхъ
	IF NOT EXISTS 
		(
			SELECT * FROM INSERTED
			WHERE 1=1
			AND ((EXCEPTION_TYPE = 'TIME' AND (TIME_FROM IS NULL OR TIME_TO IS NULL OR DATE_TO IS NOT NULL OR DATE_FROM IS NOT NULL))
			OR (EXCEPTION_TYPE = 'DATE' AND (TIME_FROM IS NOT NULL OR TIME_TO IS NOT NULL OR DATE_TO IS NULL OR DATE_FROM IS NULL))
			OR (EXCEPTION_TYPE = 'EXCLUSIVE' AND (TIME_FROM IS NOT NULL OR TIME_TO IS NOT NULL OR DATE_TO IS NOT NULL OR DATE_FROM IS NOT NULL)))
		)
	BEGIN
		UPDATE A
		SET 
		LOGIN_ID			= B.LOGIN_ID
		, TIME_FROM			= B.TIME_FROM
		, TIME_TO			= B.TIME_TO
		, DATE_FROM			= B.DATE_FROM
		, DATE_TO			= B.DATE_TO
		, EXCEPTION_TYPE 	= B.EXCEPTION_TYPE 
		FROM PRACTICE.EXCEPTION A 
		JOIN INSERTED B ON A.ID = B.ID 

--днаюбкемхе дюммшу б рюакхжс EXCEPTION_LOG
		INSERT INTO PRACTICE.EXCEPTION_LOG (EXCEPTION_ID, LOGIN_ID,TIME_FROM,TIME_TO,DATE_FROM,DATE_TO,EXCEPTION_TYPE,DATE_CHANGE,ACTION1)
		SELECT ID,LOGIN_ID,TIME_FROM,TIME_TO,DATE_FROM,DATE_TO,EXCEPTION_TYPE, GETDATE(),'днаюбкемхе'  FROM INSERTED

--днаюбкемхе дюммшу б рюакхжс EXCEPTION_LOG
		INSERT INTO PRACTICE.EXCEPTION_LOG (EXCEPTION_ID, LOGIN_ID,TIME_FROM,TIME_TO,DATE_FROM,DATE_TO,EXCEPTION_TYPE,DATE_CHANGE,ACTION1)
		SELECT ID,LOGIN_ID,TIME_FROM,TIME_TO,DATE_FROM,DATE_TO,EXCEPTION_TYPE, GETDATE(),'сдюкемхе'  FROM DELETED
	END
	ELSE 
	RAISERROR ('ньхайю! мебепмши ббнд дюммшу (UPDATE)', 16,1)
END;
